import { Jelly } from '@uiball/loaders';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import React, { useState } from 'react'
// import { IoAddCircle, IoAddCircleOutline, IoHeartCircle, IoHeartCircleOutline } from 'react-icons/io5';
import useSWR from 'swr';
// import AnimeDetailsLoader from '../../components/AnimeDetailsLoader';
// import Backdrop from '../../components/Backdrop';
// import { Anime, Genre } from '../../interface';
// import ReactPlayer from 'react-player/lazy'
import { v4 as uuidv4 } from 'uuid';
import moment from 'moment';
import truncate from '../../../helper/truncate';
import AnimeDetailsComponent from '../../../components/AnimeDetailsComponent';
import { useTheme } from '../../../lib/zustand';


const fetcher = (url:string) => fetch(url).then(res=>res.json());



const AnimeDetails = () => {
    const router = useRouter();
    const { animeId } = router.query;
    const { data,error } = useSWR(`https://api.jikan.moe/v4/anime/${animeId}`,fetcher);
    const { data:animeVideos } = useSWR(`https://api.jikan.moe/v4/anime/${animeId}/videos`,fetcher)
    const { data:animeReviews } = useSWR(`https://api.jikan.moe/v4/anime/${animeId}/reviews`, fetcher);
    // const { data:animeRecommendations } = useSWR(`https://api.jikan.moe/v4/anime/${animeId}/recommendations`, fetcher);
    const [readMore,setReadMore] = useState<boolean>(false);
    const [idReadMore,setIdReadMore] = useState();

    const { theme } = useTheme()



    const { data:anime } = data || {};
    const { data:videos } =  animeVideos || {};
    const { data:reviews } =  animeReviews || {};


    const [_link,setLink] = useState("videos");

    const tabLinks = [
        "videos",
        "episodes",
        "reviews",
        "recommendations",
        "stats",
        "characters",

    ]
    // console.log(videos)

    
    // console.log(reviews)
    // console.log(animeRecommendations)
    
    if(error) return <h1>{error}</h1>


    // const convertToDate = (x:string) => {
    //     const monthNames = ["January", "February", "March", "April", "May", "June",
    //     "July", "August", "September", "October", "November", "December"
    //     ];
    //     const date = new Date(x);

    //     const year = date.getFullYear();
    //     let dt:string | number = date.getDate();
    //     let month = monthNames[date.getMonth()];

    //     if(dt<10) {
    //         dt="0"+dt;
    //     }
        
    //     if(!x) {
    //         return "N/A"
    //     }

    //     return (`${dt} ${month}, ${year}`)
    // }

    console.log(anime)

  return (
    <main className='max-w-8xl mx-auto'>
        <Head>
            <title>{anime?.title}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
     
        {anime ? (
            
            <>
     
            <AnimeDetailsComponent anime={anime} />
            {/* <div className='relative'>
                <Image alt={anime.title} src={anime.images.webp.large_image_url} width="100%" height={25} layout="responsive" objectFit='cover'  />
                <div className='absolute z-50 -bottom-40 left-0  px-8 flex  gap-x-8 w-full'>
                  
                        <Image alt={anime.title} src={anime.images.webp.large_image_url} width={220} height={300} className="rounded-lg" objectFit='cover' />
                        <div className='pt-16 '>
                            <div>
                                <h1 className='text-white font-bold text-3xl '>{anime.title}</h1>
                                <p className="text-white font-thin text-lg">{anime.title_japanese}</p>
                       
                            </div>
                        </div>
                        <div className='pt-16 ml-auto text-white text-4xl flex'>
                      
                                <IoAddCircleOutline />
                                <IoHeartCircleOutline />

                        </div>
                        
                </div>
                <Backdrop color="#1085f1" />
            </div>
            <section className='bg-[#007CEF] w-full py-4 pr-4 text-white'>
                <div className='ml-[285px] space-y-3'>
                    <header className='flex justify-between '>
                        <h1 className='text-xl font-bold'>Synopsis</h1>
                        <div className='flex space-x-4'>
                            <p className='font-semibold'>
                                Ranked:
                                <span className='font-normal'> #{anime.rank?.toLocaleString() || "N/A"}</span>
                            </p>
                            <p className='font-bold'>
                                Popularity:
                                <span className='font-normal'> #{anime.popularity?.toLocaleString() || "N/A"}</span>
                            </p>
                            <p className='font-semibold'>
                                Members:
                                <span className='font-normal'> {anime.members?.toLocaleString() || "N/A"}</span>
                            </p>
                        </div>
                    </header>
                    <p>
                        {anime.synopsis}
                    </p>
                </div>
                <div className='p-8 flex gap-x-4 mt-8'>
                    <div className='text-white bg-[#FF9901] rounded-lg p-2 flex flex-col items-center'>
                        <span className='font-bold text-xs'>SCORE</span>
                        <span className='text-2xl font-bold'>{anime.score || "N/A"}</span>
                        <span className='text-xs font-normal'>{anime.scored_by?.toLocaleString() || "N/A"} users</span>
                    </div>
                    <div className='rounded-lg border-2 border-gray-700 p-3 space-y-2 flex flex-col '>
                        <div className='space-x-4'>
                            <span className='font-semibold'>Type: <span className='font-normal'>{anime.type}</span></span>
                            <span className='font-semibold'>Episodes: <span className='font-normal'>{anime.episodes || "N/A"}</span></span>
                            <span className='font-semibold'>
                                Genres: 
                              {anime.genres.map((genre:Genre,i:any)=>(
                                <span key={uuidv4()} className="font-normal">{`${i  ? "," : ""} ${genre.name}`}</span>
                              ))}
                            </span>
                            <span className='font-semibold'>Status: <span className='font-normal'>{anime.status}</span></span>
                            
                        </div>
                        <div className='space-x-4'>
                            <span className='font-semibold'>Aired: <span className='font-normal'>from {convertToDate(anime.aired.from)} to {convertToDate(anime.aired.to)} </span></span>
                            <span className='font-semibold'><span className='font-normal'>Broadcast: {anime.broadcast.string}</span></span>
                            <span className='font-semibold'>
                                Studios:
                              {anime.studios.map((studio:Genre,i:any)=>(
                                <span key={uuidv4()} className="font-normal">{`${i  ? "," : ""} ${studio.name}`}</span>
                            ))}
                            </span>

                        </div>
                    </div>
                    
                </div>
            
            </section> */}
            {/* <section className='bg-white p-8 max-7xl mx-auto'>
                <nav>
                    <ul className='flex justify-between'>
                        {tabLinks.map((link,i)=>(
                            <li key={uuidv4()} className={`font-bold pb-2 uppercase text-sm cursor-pointer ${_link === link  ? "border-b-4 border-blue-500" : ""}`} onClick={()=>setLink(link)}>{link}</li>
                        ))}
                    </ul>
                </nav>
                <div className={`mt-2 ${_link === "videos" ? "block" : "hidden"} `}>
                    <h1 className='font-bold text-2xl'>Trailers</h1>
                    <div className='grid md:grid-cols-2 lg:grid-cols-4 gap-x-2 grid-cols-1 mt-2'>
                        {videos?.promo.map((item:any,i:any)=>(
                            <div key={uuidv4()}>
                                <p>{item.title}</p>
                                <iframe src={item.trailer.url}></iframe>
                                <ReactPlayer url={""} controls width={300} height={200} muted  />
                            </div>
                        ))}
                    </div>
                </div>
                <div className={`mt-2 space-y-2 ${_link === "episodes" ? "block" : "hidden"} `}>
                    {episodes[0].title}
                    <h1 className='text-2xl font-bold'>Episode Lists</h1>
                    <div className=' gap-4 grid grid-cols-2'>
                        {videos?.episodes.map((_episode:any)=>(
                            <div key={uuidv4()} className="flex bg-gray-100 p-2 gap-x-2">
                                <Image src={_episode.images.jpg.image_url} width={100} height={100} alt={_episode.title} className="rounded-lg" />
                                <div>
                                    <h1 className='font-bold text-lg'>{_episode.episode}</h1>
                                    <p>{_episode.title}</p>
                                </div>
                                
                            </div>
                        ))}
                    </div>
                
               
                </div>
                <div className={`mt-2 space-y-2 ${_link === "reviews" ? "block" : "hidden"} `}>
                    <h1 className='text-2xl font-bold'>Reviews</h1>
                    <div className="space-y-2">
                        {reviews?.slice(0,10).map((review:any,i:any)=>(
                            <div key={uuidv4()} className="w-full bg-blue-50 p-2 divide-y divide-gray-300">
                                <div className='flex space-between  '>
                                    <div className='flex gap-x-2'>
                                        <Image src={review.user.images.jpg.image_url} width={50} height={70} alt={review.user.username} className="rounded-lg" />
                                        <div>
                                            <p className='text-blue-500 font-thin'>{review.user.username}</p>
                                            <p className='text-gray-400'><span className='font-bold'>{review.votes}</span> people find this review helpful</p>
                                        </div>
                                    
                                    </div>
                                    <div className='ml-auto space-y-2'>
                                        <p className='text-sm'>{moment(review.date).format("LL")}</p>
                                        <p className='text-sm text-gray-400'>{review.episodes_watched} of {videos?.episodes.length} episodes watched</p>
                                        <p>Overall rating: {review.scores.overall}</p>
                                    </div>
                                </div>
                                <div>
                                    <p className='text-sm py-4'>
                                        {truncate(review.review,readMore ? review.review.length : 1000)}
                                        <button onClick={()=>{
                                            setReadMore(!readMore)
                                        }} className=' font-semibold  text-blue-500 cursor-pointer ml-1'>{readMore ? "read less" : "read more"}</button>
                                    </p>
                                   
                                    
                                </div>
                            
                            </div>
                        ))}
                    </div>
                </div>
                <div className={`mt-2 space-y-2 ${_link === "recommendations" ? "block" : "hidden"} `}>
                    <h1 className='text-2xl font-bold '>Recommendations</h1>
                    <p></p>

                </div>
            </section>
             */}
            
            </>
            
        ):(
          <div className="h-screen place-items-center grid">
            <Jelly color={theme} size={100} />
          </div>
        )}
    </main>
  )
}

export default AnimeDetails